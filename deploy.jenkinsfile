#!/usr/bin/env groovy
@Library("pipeline@release/2.x") _

/**
 * This file tells Pipeline Jenkins how to build and deploy the project.
 * See https://wiki.indeed.com/display/PIPELINE/The+Jenkinsfile for details.
 */

script = this

bootstrap(script) {
    // Git URL
    gitConfig.gitUrl = "git@code.corp.indeed.com:delivery/jiraactions.git"
    // Main development branch. Note: if you put develop here, master will be ignored by the pipeline.
    gitConfig.gitBranch = "master"
    // JIRA project where deploy tickets should be created
    jiraConfig.jiraProjectKey = "CHANGEME"
    // Path to the deployable generated by the ant command
    buildConfig.deployablePath = "dist/jiraactions.tar.gz"
    // Jenkins will send an email when there is a new build available to the following list of comma-separated addresses
    config.newBuildAvailableEmailList = "jobsearch-testing@indeed.com"
    // Jenkins will send an email if the build fails to the following list of comma-separated addresses and everyone who committed since the last successful build
    config.failureEmailList = config.newBuildAvailableEmailList
    // Product group
    config.productGroup = "jobsearch"
    // Uses dockerized build
    config.buildInDocker = true

    // A list of URLs of your current version in QA and stage
    config.currentVersionUrlList = []
    config.versionCheckRetries = 10
    config.versionCheckSleepIntervalSeconds = 15

    // A list of URLs of your healthchecks in QA and stage
    config.healthCheckUrlList = []
    config.healthCheckRetries = 10
    config.healthCheckSleepIntervalSeconds = 5

    // A list of URLs of your current version in prod
    config.currentProdVersionUrlList = []

    // Set true to fail the build if verification instructions are not provided in annotated git tags for each issue
    config.requireVerificationInstructions = false

    // Set true to enable Slack notifications
    slackConfig.enable = false
    slackConfig.channel = "#channel-name"
}

buildPipeline(script) {
    createDeployable(script) {
        buildInDockerContainer(script) {
            // This is the ant command you use to build and test your deployable
            dockerSh("ant clean test distribute-hadoop-deploy")
        }
    }

    // Human input before deploying to QA, automatically skipped if the pipeline is clear
    approveQaDeploy(script)

    deployToQa(script) {
        uploadToArc(script)
    }

    // Include this block to allow inputting your verification notes directly from Jenkins. The notes will be posted to the deploy ticket.
    pipelineStage(script, "INPUT VERIFICATION NOTES") {
        inputVerificationNotes(script, message: "Input verification notes", abortMessage: "Input verification notes for why you are aborting this build")
    }

    // Authenticated human input before deploying to prod
    pipelineStage(script, "APPROVE PROD DEPLOY") {
        inputWithTimeout(script, message: "Deploy to Prod?", stage: "PROD")
    }

    deployToProd(script) {
        changeArcLabel(script)
    }
}
